import{n as e,t}from"./esm-shims-BC3isTv8.js";import"./config-DZMnNPig.js";import"./logger-asV68Lay.js";import"./ofetch-CfXAR0UO.js";import"./helpers-Cqaav28H.js";import{t as n}from"./cache-CpEhLexq.js";import{t as r}from"./render-d6AVTUl2.js";import{t as i}from"./parse-date-CHEO0z5G.js";import{t as a}from"./got-dCh-Ojgc.js";import{t as o}from"./timezone-BPfwRbwD.js";import{t as s}from"./invalid-parameter-CLGd_tte.js";import{t as c}from"./valid-host-COjFWLEv.js";import l from"node:path";import{load as u}from"cheerio";e();const d={path:`/devlog/:user/:id`,categories:[`game`],example:`/itch/devlog/teamterrible/the-baby-in-yellow`,parameters:{user:`User id, can be found in URL`,id:`Item id, can be found in URL`},features:{requireConfig:!1,requirePuppeteer:!1,antiCrawler:!1,supportBT:!1,supportPodcast:!1,supportScihub:!1},name:`Developer Logs`,maintainers:[`nczitzk`],handler:f,description:"`User id` is the field before `.itch.io` in the URL of the corresponding page, e.g. the URL of [The Baby In Yellow Devlog](https://teamterrible.itch.io/the-baby-in-yellow/devlog) is `https://teamterrible.itch.io/the-baby-in-yellow/devlog`, where the field before `.itch.io` is `teamterrible`.\n\n  `Item id` is the field between `itch.io` and `/devlog` in the URL of the corresponding page, e.g. the URL for [The Baby In Yellow Devlog](https://teamterrible.itch.io/the-baby-in-yellow/devlog) is `https://teamterrible.itch.io/the-baby-in-yellow/devlog`, where the field between `itch.io` and `/devlog` is `the-baby-in-yellow`.\n\n  So the route is [`/itch/devlogs/teamterrible/the-baby-in-yellow`](https://rsshub.app/itch/devlogs/teamterrible/the-baby-in-yellow)."};async function f(e){let d=e.req.param(`user`)??``,f=e.req.param(`id`)??``,p=Number.parseInt(e.req.query(`limit`))||20;if(!c(d))throw new s(`Invalid user`);let m=`https://${d}.itch.io/${f}/devlog`,h=u((await a({method:`get`,url:m})).data),g=h(`.title`).toArray().slice(0,p).map(e=>(e=h(e),{title:e.text(),link:e.attr(`href`),pubDate:o(i(e.text()),8)}));return g=await Promise.all(g.map(e=>n.tryGet(e.link,async()=>{let n=u((await a({method:`get`,url:e.link})).data),i=n(`script[type="application/ld+json"]:contains("@type":"BlogPosting")`),o=JSON.parse(n(i).text());return e.author=o.author.name,e.pubDate=o.datePublished,e.description=r(l.join(t,`templates/description-6541c218.art`),{images:n(`.post_image`).toArray().map(e=>n(e).attr(`src`)),description:n(`.post_body`).html()}),e}))),{title:h(`title`).text(),link:m,item:g}}export{d as route};