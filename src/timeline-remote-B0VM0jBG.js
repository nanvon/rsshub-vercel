import"./esm-shims-2LyWUseo.js";import{config as e}from"./config-CVBRPN4O.js";import"./logger-BvonkID1.js";import"./ofetch-BLnIkXRv.js";import"./helpers-gUVC02jt.js";import"./cache-Dfid4xgQ.js";import"./parse-date-DHsdom8D.js";import{got_default as t}from"./got-DPq_2TLS.js";import{ViewType as n}from"./types-Bi82qguM.js";import{config_not_found_default as r}from"./config-not-found-mNOcOzCd.js";import{utils_default as i}from"./utils-B7Y9KOG5.js";const a={path:`/remote/:site/:only_media?`,categories:[`social-media`],view:n.SocialMedia,example:`/mastodon/remote/pawoo.net/true`,parameters:{site:"instance address, only domain, no `http://` or `https://` protocol header",only_media:{description:`whether only display media content, default to false, any value to true`,options:[{value:`true`,label:`true`},{value:`false`,label:`false`}],default:`false`}},features:{requireConfig:!1,requirePuppeteer:!1,antiCrawler:!1,supportBT:!1,supportPodcast:!1,supportScihub:!1},name:`Instance timeline (federated)`,maintainers:[`hoilc`],handler:o,description:"If the instance address is not `mastodon.social` or `pawoo.net`, then the route requires `ALLOW_USER_SUPPLY_UNSAFE_DOMAIN` to be `true`."};async function o(n){let a=n.req.param(`site`),o=n.req.param(`only_media`)===`true`?`true`:`false`;if(!e.feature.allow_user_supply_unsafe_domain&&!i.allowSiteList.includes(a))throw new r(`This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);let s=`http://${a}/api/v1/timelines/public?remote=true&only_media=${o}`,c=(await t.get(s,{headers:i.apiHeaders(a)})).data;return{title:`Federated Public${n.req.param(`only_media`)===`true`?` Media`:``} Timeline on ${a}`,link:`https://${a}`,item:i.parseStatuses(c)}}export{a as route};