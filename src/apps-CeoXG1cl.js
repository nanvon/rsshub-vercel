import{n as e,t}from"./esm-shims-BC3isTv8.js";import"./config-DZMnNPig.js";import"./logger-asV68Lay.js";import{t as n}from"./ofetch-CfXAR0UO.js";import{t as r}from"./render-d6AVTUl2.js";import{t as i}from"./parse-date-CHEO0z5G.js";import{t as a}from"./types-Bn7An2Wc.js";import o from"node:path";import{load as s}from"cheerio";e();const c=e=>{let t={0:`search.score() desc, Metadata/OfficialRepositoryNumber desc, NameSortable asc`,1:`NameSortable asc, Metadata/OfficialRepositoryNumber desc, Metadata/RepositoryStars desc, Metadata/Committed desc`,2:`Metadata/Committed desc, Metadata/OfficialRepositoryNumber desc, Metadata/RepositoryStars desc`};if(e===`1`)return t;let n={};for(let e in t)n[e]=t[e].replaceAll(/\b(desc|asc)\b/gi,e=>e.toLowerCase()===`desc`?`asc`:`desc`);return n},l={o:`Metadata/OfficialRepositoryNumber eq 1`,dm:`Metadata/DuplicateOf eq null`},u=async e=>{let{query:a=`s=2&d=1&n=true&dm=true&o=true`}=e.req.param(),u=Number.parseInt(e.req.query(`limit`)??`50`,10),d=`https://scoop.sh`,f=new URL(`/#/apps?${a}`,d).href,p=new URL(`indexes/apps/docs/search`,`https://scoopsearch.search.windows.net`).href,m=await n(f),h=s(m)(`html`).attr(`lang`)??`en`,g=/<script type="module" crossorigin src="(.*?)"><\/script>/,_=g.test(m)?new URL(m.match(g)?.[1],d).href:``;if(!_)throw Error(`JavaScript file not found.`);let v=(await n(_,{parseResponse:e=>e})).match(/VITE_APP_AZURESEARCH_KEY:"(.*?)"/)?.[1];if(!v)throw Error(`Key not found.`);let y=!a.includes(`o=false`),b=!a.includes(`dm=false`),x=a.match(/s=(\d+)/)?.[1]??`2`,S=a.match(/d=(\d+)/)?.[1]??`1`,C=await n(p,{method:`post`,query:{"api-version":`2020-06-30`},headers:{"api-key":v,origin:d,referer:d},body:{count:!0,search:``,searchMode:`all`,filter:[y?l.o:void 0,b?l.dm:void 0].filter(Boolean).join(` and `),orderby:c(S)[x],skip:0,top:u,select:`Id,Name,NamePartial,NameSuffix,Description,Notes,Homepage,License,Version,Metadata/Repository,Metadata/FilePath,Metadata/OfficialRepository,Metadata/RepositoryStars,Metadata/Committed,Metadata/Sha`,highlight:`Name,NamePartial,NameSuffix,Description,Version,License,Metadata/Repository`,highlightPreTag:`<mark>`,highlightPostTag:`</mark>`}}),w=[];w=C.value.slice(0,u).map(e=>{let n=e.Metadata.Repository.split(/\//).slice(-2).join(`/`),a=`${e.Name} ${e.Version} in ${n}`,s=r(o.join(t,`templates/description-fe4e5583.art`),{item:e}),c=e.Metadata.Committed,l=e.Homepage,u=[{name:n,url:e.Metadata.Repository,avatar:void 0}],d=`scoop-${e.Name}-${e.Version}-${e.Metadata.Sha}`,f=c;return{title:a,description:s,pubDate:c?i(c):void 0,link:l,author:u,guid:d,id:d,content:{html:s,text:s},updated:f?i(f):void 0,language:h}});let T=`Scoop`;return{title:`${T} - Apps`,description:void 0,link:f,item:w,allowEmpty:!0,author:T,language:h,id:f}},d={path:`/apps/:query?`,name:`Apps`,url:`scoop.sh`,maintainers:[`nczitzk`],handler:u,example:`/scoop/apps`,parameters:{query:{description:"Query, `s=2&d=1&n=true&dm=true&o=true` by default"}},description:"::: tip\nTo subscribe to [Apps](https://scoop.sh/#/apps?s=2&d=1&n=true&dm=true&o=true), where the source URL is `https://scoop.sh/#/apps?s=2&d=1&n=true&dm=true&o=true`, extract the certain parts from this URL to be used as parameters, resulting in the route as [`/scoop/apps/s=2&d=1&n=true&dm=true&o=true`](https://rsshub.app/scoop/apps/s=2&d=1&n=true&dm=true&o=true).\n:::",categories:[`program-update`],features:{requireConfig:!1,requirePuppeteer:!1,antiCrawler:!1,supportRadar:!0,supportBT:!1,supportPodcast:!1,supportScihub:!1},radar:[{source:[`scoop.sh/#/apps`,`scoop.sh`],target:(e,t)=>{let n=new URL(t).searchParams.toString()??void 0;return`/scoop/apps${n?`/${n}`:``}`}}],view:a.Notifications};export{u as handler,d as route};