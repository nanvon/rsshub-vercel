import"./esm-shims-BC3isTv8.js";import{t as e}from"./config-DZMnNPig.js";import"./logger-asV68Lay.js";import"./ofetch-CfXAR0UO.js";import"./helpers-Cqaav28H.js";import"./cache-CpEhLexq.js";import"./parse-date-CHEO0z5G.js";import{t}from"./got-dCh-Ojgc.js";import{t as n}from"./types-Bn7An2Wc.js";import{t as r}from"./config-not-found-CX6cWM57.js";import{t as i}from"./utils-DPwc-Lf3.js";const a={path:`/timeline/:site/:only_media?`,categories:[`social-media`],view:n.SocialMedia,example:`/mastodon/timeline/pawoo.net/true`,parameters:{site:"instance address, only domain, no `http://` or `https://` protocol header",only_media:{description:`whether only display media content, default to false, any value to true`,options:[{value:`true`,label:`true`},{value:`false`,label:`false`}],default:`false`}},features:{requireConfig:!1,requirePuppeteer:!1,antiCrawler:!1,supportBT:!1,supportPodcast:!1,supportScihub:!1},name:`Instance timeline (local)`,maintainers:[`hoilc`],handler:o,description:"If the instance address is not `mastodon.social` or `pawoo.net`, then the route requires `ALLOW_USER_SUPPLY_UNSAFE_DOMAIN` to be `true`."};async function o(n){let a=n.req.param(`site`),o=n.req.param(`only_media`)===`true`?`true`:`false`;if(!e.feature.allow_user_supply_unsafe_domain&&!i.allowSiteList.includes(a))throw new r(`This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);let s=`http://${a}/api/v1/timelines/public?local=true&only_media=${o}`,c=(await t.get(s,{headers:i.apiHeaders(a)})).data;return{title:`Local Public${n.req.param(`only_media`)===`true`?` Media`:``} Timeline on ${a}`,link:`https://${a}`,item:i.parseStatuses(c)}}export{a as route};